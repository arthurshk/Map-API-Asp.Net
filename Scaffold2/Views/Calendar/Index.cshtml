@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using Scaffold2.Models
@model List<CalendarModel>

<div class="container">
    <div class="col-12">
        <h1>Event Calendar</h1>
        <button class="btn btn-outline-primary" id="createEventButton">Create Event</button>
        <div id="calendar"></div>
    </div>
</div>


@section Scripts{
    <script>
        // document.addEventListener('DOMContentLoaded', function () {
        //     let calendarEl = document.getElementById('calendar');
        //     let calendar = new FullCalendar.Calendar(calendarEl, {
        //         initialView: 'dayGridMonth', 
        //         events: [
        //            { title: 'Event 1', start: '2023-09-10' },
        //         ],
        //     });
        //     calendar.render();
        // });
        document.getElementById('createEventButton').addEventListener('click', function () {
            window.location.href = '/calendar/create';
        });
        document.addEventListener('DOMContentLoaded', function () {
            let calendarEl = document.getElementById('calendar');
            let calendar;
            let events = [];
            let eventsData = @Html.Raw(Json.Serialize(Model));
            eventsData.forEach(eventData => {
                const newEvent = {
                    id: eventData.id,
                    title: eventData.eventTitle,
                    start: eventData.eventDate,
                    description: eventData.eventDescription
                };
                events.push(newEvent);
            });
            function initializeCalendar() {
                calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: 'dayGridMonth',
                    events: function (fetchInfo, successCallback, failureCallback) {

                        // const formattedEvents = events.map(event => ({
                        //     id: event.id,
                        //     title: event.eventTitle,
                        //     start: event.eventDate,
                        //     description: event.eventDescription
                        // }));
                        successCallback(events);
                    },
                });

                console.log(events);
                calendar.render();
            }

            initializeCalendar();

            // let eventsData = @Html.Raw(Json.Serialize(Model));
            // eventsData.forEach(eventData => {
            //     const newEvent = {
            //         id: eventData.id,
            //         title: eventData.eventTitle,
            //         start: eventData.eventDate,
            //         description: eventData.eventDescription
            //     };
            //     events.push(newEvent);
            // });

            calendar.refetchEvents();
        });

        // document.addEventListener('DOMContentLoaded', function () {
        //     let calendarEl = document.getElementById('calendar');
        //     let calendar;
        //     let events = [];

        //     function initializeCalendar() {
        //         calendar = new FullCalendar.Calendar(calendarEl, {
        //             initialView: 'dayGridMonth',
        //             events: events,
        //         });
        //         console.log(events)
        //         calendar.render();
        //     }

        //     initializeCalendar();

        //     document.getElementById('createForm').addEventListener('submit', function (e) {
        //         e.preventDefault();
        //         let formData = new FormData(this);

        //         fetch('/calendar/create', {
        //             method: 'POST',
        //             body: formData
        //         })
        //             .then(response => response.json())
        //             .then(newEventData => {
        //                 console.log('Received JSON Data:', newEventData);
        //                 const newEvent = {
        //                     id: newEventData.id,
        //                     title: newEventData.title,
        //                     start: newEventData.start,
        //                     description: newEventData.description
        //                 };
        //                console.log('Created New Event:', newEvent); 
        //                 events.push(newEvent);
        //                 calendar.refetchEvents();
        //             })
        //             .catch(error => {
        //                 console.error('Error:', error);
        //             });
        //     });
        // });

    </script>
}